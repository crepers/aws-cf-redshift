AWSTemplateFormatVersion: 2010-09-09
Description: >-
  This CloudFormation sample template Oracle_DynamoDB_Aurora_PostgreSQL_DMS
  creates an Oracle and Aurora PostgreSQL RDS instances in a VPC which can be
  used to test the database migration using AWS DMS service. It also creates a
  DynamoDB table and a Cloud9 environment. You will be billed for the AWS
  resources used if you create a stack from this template
Parameters:
  OracleDBName:
    Default: ORCL
    Description: Enter Oracle Database name
    Type: String
    MinLength: '4'
    MaxLength: '63'
    AllowedPattern: '[a-zA-Z][a-zA-Z0-9]*'
    ConstraintDescription: >-
      must begin with a letter and contain a minimum of 4 alphanumeric
      characters.
  OracleDBPassword:
    Default: oraadmin123
    NoEcho: 'true'
    Description: 'Enter password for the oracle admin user: dbadmin'
    Type: String
    MinLength: '8'
    MaxLength: '41'
    AllowedPattern: '[a-zA-Z0-9]*'
    ConstraintDescription: must contain only alphanumeric characters with minimum of 8 characters.
  OracleDBStorage:
    Default: '100'
    NoEcho: 'false'
    Description: Enter storage for Oracle DB in GB
    Type: Number
    MaxValue: '6000'
    MinValue: '100'
    ConstraintDescription: must contain only numberic and min 100gb less than 6000 GB.
  OracleInstanceType:
    Description: Oracle DB instance type
    Type: String
    Default: db.t3.medium
    AllowedValues:
      - db.t3.medium
      - db.t3.large
      - db.r5.large
      - db.m5.large
    ConstraintDescription: must be a valid Oracle instance type.
  ClientIP:
    Description: >-
      The IP address range that can be used to connect to the RDS instances from
      your local machine.It must be a valid IP CIDR range of the form
      x.x.x.x/x.Pls get your address using checkip.amazonaws.com or
      whatsmyip.org
    Type: String
    MinLength: '9'
    MaxLength: '18'
    Default: 0.0.0.0/0
    AllowedPattern: '(\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})'
    ConstraintDescription: >-
      It must be a valid IP CIDR range of the form x.x.x.x/x. Suggest to enable
      access to your IP address only. Pls get your address using
      checkip.amazonaws.com or whatsmyip.org.
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: Source Oracle Database Configuration
        Parameters:
          - OracleDBName
          - OracleDBPassword
          - OracleDBStorage
          - OracleInstanceType
      - Label:
          default: Enter IP address for the DB Security group Configuration
        Parameters:
          - ClientIP
Mappings:
  OracleEngineVersion:
    us-east-1:
      ver: 19.0.0.0.ru-2020-04.rur-2020-04.r1
    us-west-2:
      ver: 19.0.0.0.ru-2020-04.rur-2020-04.r1
  OracleSnapshotId:
    us-east-1:
      snapid: >-
        arn:aws:rds:us-east-1:973833070108:snapshot:aws-db-workshop-oracle-19c-taxidata-samplev1
    us-west-2:
      snapid: >-
        arn:aws:rds:us-west-2:973833070108:snapshot:aws-db-workshop-oracle-19c-taxidata-samplev1
Resources:
  VPC:
    Type: 'AWS::EC2::VPC'
    Properties:
      CidrBlock: 10.0.0.0/20
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
        - Key: Name
          Value: !Ref 'AWS::StackName'
  DBSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.3.0/25
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  DBSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.4.0/25
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AppSubnet1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.1.0/25
      AvailabilityZone: !Select 
        - '0'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AppSubnet2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      VpcId: !Ref VPC
      CidrBlock: 10.0.2.0/25
      AvailabilityZone: !Select 
        - '1'
        - !GetAZs ''
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  InternetGateway:
    Type: 'AWS::EC2::InternetGateway'
    Properties:
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  AttachGateway:
    Type: 'AWS::EC2::VPCGatewayAttachment'
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway
  RouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'
  Route:
    Type: 'AWS::EC2::Route'
    DependsOn: AttachGateway
    Properties:
      RouteTableId: !Ref RouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway
  SubnetRouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref DBSubnet1
      RouteTableId: !Ref RouteTable
  SubnetRouteTableAssociation1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref DBSubnet2
      RouteTableId: !Ref RouteTable
  MyNATGateway:
    Type: 'AWS::EC2::NatGateway'
    DependsOn: MyNATPublicIP
    Properties:
      AllocationId: !GetAtt 
        - MyNATPublicIP
        - AllocationId
      SubnetId: !Ref DBSubnet1
  MyNATPublicIP:
    Type: 'AWS::EC2::EIP'
    DependsOn: VPC
    Properties:
      Domain: vpc
  MyprivateRouteTable:
    Type: 'AWS::EC2::RouteTable'
    Properties:
      VpcId: !Ref VPC
  MyprivateRoute:
    Type: 'AWS::EC2::Route'
    Properties:
      RouteTableId: !Ref MyprivateRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref MyNATGateway
  privateSubnet1RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AppSubnet1
      RouteTableId: !Ref MyprivateRouteTable
  privateSubnet2RouteTableAssociation:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref AppSubnet2
      RouteTableId: !Ref MyprivateRouteTable
  MyDBSubnetGroup:
    Type: 'AWS::RDS::DBSubnetGroup'
    Properties:
      DBSubnetGroupDescription: Subnet available for the DMS Demo RDS DB Instance
      SubnetIds:
        - !Ref DBSubnet1
        - !Ref DBSubnet2
  OraVPCSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: Security group for Oracle Instance.
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: '1521'
          ToPort: '1521'
          CidrIp: !Ref ClientIP
        - IpProtocol: tcp
          FromPort: '1521'
          ToPort: '1521'
          CidrIp: 10.0.0.0/20
  
  OracleDB:
    Type: 'AWS::RDS::DBInstance'
    Properties:
      DBName: !Ref OracleDBName
      AllocatedStorage: !Ref OracleDBStorage
      MasterUserPassword: !Ref OracleDBPassword
      DBInstanceClass: !Ref OracleInstanceType
      Engine: oracle-se2
      EngineVersion: !FindInMap 
        - OracleEngineVersion
        - !Ref 'AWS::Region'
        - ver
      LicenseModel: license-included
      PubliclyAccessible: 'true'
      AvailabilityZone: !GetAtt 
        - DBSubnet1
        - AvailabilityZone
      MultiAZ: 'false'
      DBSubnetGroupName: !Ref MyDBSubnetGroup
      VPCSecurityGroups:
        - !Ref OraVPCSecurityGroup
      DBSnapshotIdentifier: !FindInMap 
        - OracleSnapshotId
        - !Ref 'AWS::Region'
        - snapid
      StorageType: gp2
      Tags:
        - Key: Application
          Value: !Ref 'AWS::StackId'

  Cloud9Environment:
    Type: 'AWS::Cloud9::EnvironmentEC2'
    Properties:
      AutomaticStopTimeMinutes: 60
      InstanceType: t3.medium
      Name: !Sub 'Project-${AWS::StackName}'
      SubnetId: !Ref DBSubnet1

  Cloud9DevIAMRole:
    Type: 'AWS::IAM::Role'
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - 'arn:aws:iam::aws:policy/AWSLambdaFullAccess'
        - 'arn:aws:iam::aws:policy/SecretsManagerReadWrite'
        - 'arn:aws:iam::aws:policy/AWSCloudFormationFullAccess'
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: ec2.amazonaws.com
            Action: 'sts:AssumeRole'
      Path: /
  DBWorkshopS3Bucket:
    Type: 'AWS::S3::Bucket'
  
Outputs:
  StackName:
    Value: !Ref 'AWS::StackName'
  Regionname:
    Value: !Ref 'AWS::Region'
  VPCid:
    Value: !GetAtt 
      - AppSubnet1
      - VpcId
  S3bucketName:
    Description: S3 bucket used for this workshop
    Value: !Ref DBWorkshopS3Bucket
  Cloud9Env:
    Value: !Join 
      - ''
      - - 'https://'
        - !Ref 'AWS::Region'
        - .console.aws.amazon.com/cloud9/home/
        - '?region='
        - !Ref 'AWS::Region'
  
  OracleDBMasterUser:
    Value: !Select 
      - '0'
      - - dbadmin
        - auradmin
  OracleRDSDetails:
    Description: 'Oracle RDS DNS:port:DBName'
    Value: !Join 
      - ''
      - - !GetAtt 
          - OracleDB
          - Endpoint.Address
        - ':'
        - !GetAtt 
          - OracleDB
          - Endpoint.Port
        - ':'
        - !Ref OracleDBName
  OracleJDBCConnectionString:
    Description: JDBC string for Oracle database
    Value: !Join 
      - ''
      - - 'jdbc:oracle:thin:@'
        - !GetAtt 
          - OracleDB
          - Endpoint.Address
        - ':'
        - !GetAtt 
          - OracleDB
          - Endpoint.Port
        - ':'
        - !Ref OracleDBName
